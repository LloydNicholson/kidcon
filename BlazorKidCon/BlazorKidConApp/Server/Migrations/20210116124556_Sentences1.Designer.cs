// <auto-generated />
using System;
using BlazorKidConApp.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorKidConApp.Server.Migrations
{
    [DbContext(typeof(KidConDbContext))]
    [Migration("20210116124556_Sentences1")]
    partial class Sentences1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ClassificationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IncreasingSide")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClassificationId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Alternative", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlternativeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AlternativePhrase")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Alternatives");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Business", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Classification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Name", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Sentence", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("AccountId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("BusinessId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusinessName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("OtherPartyId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("TransactionAmount")
                        .HasColumnType("REAL");

                    b.Property<string>("TransactionPhrase")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BusinessId");

                    b.HasIndex("OtherPartyId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Sentences");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Account", b =>
                {
                    b.HasOne("BlazorKidConApp.Shared.Models.Classification", "Classification")
                        .WithMany("Accounts")
                        .HasForeignKey("ClassificationId");

                    b.Navigation("Classification");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Alternative", b =>
                {
                    b.HasOne("BlazorKidConApp.Shared.Models.Account", "Account")
                        .WithMany("Alternatives")
                        .HasForeignKey("AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Sentence", b =>
                {
                    b.HasOne("BlazorKidConApp.Shared.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("BlazorKidConApp.Shared.Models.Business", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorKidConApp.Shared.Models.Name", "OtherParty")
                        .WithMany()
                        .HasForeignKey("OtherPartyId");

                    b.HasOne("BlazorKidConApp.Shared.Models.Name", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Account");

                    b.Navigation("Business");

                    b.Navigation("OtherParty");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Account", b =>
                {
                    b.Navigation("Alternatives");
                });

            modelBuilder.Entity("BlazorKidConApp.Shared.Models.Classification", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
